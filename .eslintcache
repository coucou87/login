[{"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\index.js":"1","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\reportWebVitals.js":"2","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\App.js":"3","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\history\\history.js":"4","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\sendCode\\SendCode.js":"5","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\authenticated\\Authenticated.js":"6","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\container\\language.js":"7","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\register\\Register.js":"8","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\home\\Home.js":"9","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\constants\\api.js":"10","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\errorModal\\ErrorModal.js":"11","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\button\\Button.js":"12","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\LanguageSelector.js":"13","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\loader\\Loader.js":"14","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\languages\\index.js":"15","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\table\\Table.js":"16"},{"size":558,"mtime":1610807123235,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1606138302432,"results":"19","hashOfConfig":"18"},{"size":1571,"mtime":1610787040322,"results":"20","hashOfConfig":"18"},{"size":86,"mtime":1610548507472,"results":"21","hashOfConfig":"18"},{"size":3733,"mtime":1610786541856,"results":"22","hashOfConfig":"18"},{"size":3067,"mtime":1610804205037,"results":"23","hashOfConfig":"18"},{"size":1330,"mtime":1610786538733,"results":"24","hashOfConfig":"18"},{"size":4305,"mtime":1610804245392,"results":"25","hashOfConfig":"18"},{"size":1077,"mtime":1610786541505,"results":"26","hashOfConfig":"18"},{"size":272,"mtime":1610281404564,"results":"27","hashOfConfig":"18"},{"size":569,"mtime":1610803948630,"results":"28","hashOfConfig":"18"},{"size":200,"mtime":1610548439745,"results":"29","hashOfConfig":"18"},{"size":1129,"mtime":1610807649839,"results":"30","hashOfConfig":"18"},{"size":282,"mtime":1610550083003,"results":"31","hashOfConfig":"18"},{"size":185,"mtime":1610474584151,"results":"32","hashOfConfig":"18"},{"size":1417,"mtime":1610786541817,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"zjafnm",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\index.js",[],["71","72"],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\reportWebVitals.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\App.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\history\\history.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\sendCode\\SendCode.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\authenticated\\Authenticated.js",["73","74"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { baseUrl, authEndPoint } from '../../constants/api';\r\nimport history from '../history/history';\r\nimport { Text, LanguageContext  } from '../container/language';\r\nimport Cookies from 'universal-cookie';\r\nimport ErrorModal from '../errorModal/ErrorModal';\r\nimport Button from '../button/Button';\r\nimport Table from '../table/Table';\r\nimport Loader from '../loader/Loader';\r\nimport './authenticated.css';\r\n\r\nexport default function Authenticated() {\r\n    const { dictionary } = useContext(LanguageContext);\r\n    const [fullname, setFullname] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [id, setId] = useState('')\r\n    const cookie = new Cookies();\r\n\r\n    const handleClose = () => setShowModal(!showModal)\r\n    const exit = () => {\r\n        history.push(\"/\")\r\n        cookie.set('token', '', { path: '/' })\r\n        cookie.set('refresh-token', '', { path: '/' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = cookie.get(\"token\")\r\n        fetch(`${baseUrl}/${authEndPoint}?origin=*`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + token\r\n            }\r\n        })\r\n            .then((response) => response.json().then(res => ({ status: response.status, data: res })))\r\n            .then((responseData) => {\r\n                if (responseData.status === 200) {\r\n                    setLoading(true)\r\n                    setId(responseData.data.data.id)\r\n                    setFullname(responseData.data.data.full_name)\r\n                    setName(responseData.data.data.name)\r\n                    setUsername(responseData.data.data.username)\r\n                } else {\r\n                    setLoading(false)\r\n                    setShowModal(!showModal)\r\n                    setErrorMessage(responseData.data.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                setShowModal(!showModal)\r\n                setErrorMessage(<Text tid=\"server-error-500\" />)\r\n            });\r\n    }, [showModal])\r\n\r\n    return (\r\n        <>\r\n          {dictionary.enterText}\r\n            {showModal && <ErrorModal errorTxt={errorMessage} handleClose={handleClose} />}\r\n            <div className=\"auth-wrapper\">\r\n                <Table name={name} fullname={fullname} username={username} />\r\n                {!loading && <Loader />}\r\n                <div className=\"auth-btn-container\">\r\n                    <Button onClick={exit} className=\"auth-btn\">\r\n                        <Text tid=\"logout-btn\" />\r\n                    </Button>\r\n                    <Button onClick={() => history.push(\"/\")}>\r\n                        <Text tid=\"back-btn\" />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\container\\language.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\register\\Register.js",["75"],"import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport history from '../history/history';\r\nimport { baseUrl, registerEndPoint } from '../../constants/api';\r\nimport { Text } from '../container/language';\r\nimport './register.css';\r\nimport ErrorModal from '../errorModal/ErrorModal';\r\nimport Cookies from 'universal-cookie';\r\nimport Logo from '../../constants/images/logo.png';\r\nimport Button from '../button/Button';\r\n\r\nexport default function Register({ getModel }) {\r\n    const [username, setUsername] = useState('')\r\n    const [app, setApp] = useState('pros')\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const cookie = new Cookies();\r\n\r\n    const handleClose = () => setShowModal(!showModal)\r\n    const getLanguage = () => {\r\n        switch (cookie.get('lang')) {\r\n            case ('en'): return \"2\"\r\n            case ('fa'): return \"1\"\r\n        }\r\n    }\r\n\r\n   \r\n    const onSubmit = (data) => {\r\n        fetch(`${baseUrl}/${registerEndPoint}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                username: data.username,\r\n                app: data.app\r\n            })\r\n        })\r\n            .then((response) => response.json().then(res => ({ status: response.status, data: res })))\r\n            .then((responseData) => {\r\n                if (responseData.status === 200) {\r\n                    getModel({\r\n                        \"username\": username,\r\n                        \"password\": responseData.data.data.code,\r\n                        \"registered\": responseData.data.data.registered === false ? \"0\" : \"1\",\r\n                        \"languageId\": getLanguage(),\r\n                        \"app\": app\r\n                    })\r\n                    history.push(\"/SendCode\")\r\n                } else {\r\n                    setShowModal(!showModal)\r\n                    setErrorMessage(responseData.data.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setShowModal(!showModal)\r\n                setErrorMessage(<Text tid=\"server-error-500\" />)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            {showModal && <ErrorModal errorTxt={errorMessage} handleClose={handleClose} />}\r\n            <div className=\"register-container\">\r\n                <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\r\n                    <img src={Logo} className=\"Logo\" alt=\"\" />\r\n                    <div className=\"wrapper\">\r\n                        <input\r\n                            className=\"register-input\"\r\n                            name=\"username\"\r\n                            value={username || ''}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            ref={register({\r\n                                required: <Text tid=\"register-input\" />,\r\n                                pattern: {\r\n                                    value: /^.{1,20}$/,\r\n                                    message: <Text tid=\"max-length-20-error-message\" />\r\n                                }\r\n                            })}\r\n                        />\r\n                        <div className=\"error\">\r\n                            {errors.username && errors.username.message}\r\n                        </div>\r\n                        <select className=\"register-select\" name=\"app\" \r\n                            ref={register} value={app} onChange={(e) => setApp(e.target.value)} >\r\n                            <option key=\"pros\" value=\"pros\" >pros</option>\r\n                            <option key=\"admin\" value=\"admin\">admin</option>\r\n                            <option key=\"care\" value=\"care\">care</option>\r\n                        </select>\r\n                        <Button>\r\n                            <Text tid=\"register-btn\" />\r\n                        </Button>\r\n                        <Button onClick={() => history.push(\"/\")}>\r\n                            <Text tid=\"back-btn\" />\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\home\\Home.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\constants\\api.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\errorModal\\ErrorModal.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\button\\Button.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\LanguageSelector.js",["76"],"import React, { useContext, useEffect } from 'react';\r\nimport { languageOptions } from '../languages';\r\nimport { LanguageContext } from './container/language';\r\nimport Cookies from 'universal-cookie';\r\nimport './languageSelector.css';\r\n\r\nexport default function LanguageSelector() {\r\n  const { userLanguage, userLanguageChange } = useContext(LanguageContext);\r\n  const cookie = new Cookies();\r\n\r\n  // set selected language by calling context method\r\n  const handleLanguageChange = e => userLanguageChange(e.target.value);\r\n  \r\n  let defaultLanguage = cookie.get('lang');\r\n  useEffect(() => {\r\n  \r\n    if (!defaultLanguage) {\r\n      cookie.set('dir', defaultLanguage === 'fa' ? 'rtl' : 'ltr');\r\n      defaultLanguage = window.navigator.language.substring(0, 2);\r\n    }\r\n    userLanguageChange(defaultLanguage);\r\n  }, [userLanguageChange, cookie]);\r\n\r\n  return (\r\n    <select className=\"language-select\"\r\n      onChange={handleLanguageChange}\r\n      value={userLanguage}\r\n    >\r\n      {Object.entries(languageOptions).map(([id, name]) => (\r\n        <option key={id} value={id} >{name}</option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n","D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\loader\\Loader.js",[],["77","78"],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\languages\\index.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\login\\src\\components\\table\\Table.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":20,"column":12,"nodeType":"85","messageId":"86","endLine":20,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":57,"column":8,"nodeType":"89","endLine":57,"endColumn":19,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":22,"column":9,"nodeType":"93","messageId":"94","endLine":25,"endColumn":10},{"ruleId":"87","severity":1,"message":"95","line":19,"column":25,"nodeType":"96","endLine":19,"endColumn":66},{"ruleId":"79","replacedBy":"97"},{"ruleId":"81","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookie'. Either include it or remove the dependency array.","ArrayExpression",["101"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Assignments to the 'defaultLanguage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["99"],["100"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [cookie, showModal]",{"range":"104","text":"105"},[2320,2331],"[cookie, showModal]"]